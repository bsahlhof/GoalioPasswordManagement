<?php
/**
 * GoalioPasswordManagement Configuration
 *
 * If you have a ./config/autoload/ directory set up for your project, you can
 * drop this config file in it and change the values as you wish.
 */
$settings = array(

    /**
     * Login Password Change Entity Class
     *
     * Name of Entity class to use. Useful for using your own entity class
     * instead of the default one provided. Default is ZfcUser\Entity\User.
     */
    'login_password_change_entity_class' => 'GoalioSecurity\Model\Entities\LoginPasswordChange',

    'login_attempt_entity_class' => 'GoalioSecurity\Model\Entities\LoginAttempt',

    'changePasswordRoutes' => array(
        'zfcuser/changepassword',
        'security_api/change',
    ),

    'auto_login' => null,

    /**
     * Multiple Login expire time
     *
     * How far into the past will the system check for failed login attempts
     *
     * Default value: 3600 seconds = 1 hour
     * Accepted values: the number of seconds in the past the system should check for failed attempts
     */
    //'reset_expire' => 3600,

    //'delay_login_after_failed_attempts' => 3,

    //'block_login_after_failed_attempts' => null,

    /**
     * End of GoalioPasswordManagement configuration
     */
);

/**
 * ZfcUser Configuration
 *
 * If you have a ./config/autoload/ directory set up for your project, you can
 * drop this config file in it and change the values as you wish.
 */
$zfcSettings = array(

    /**
     * Authentication Adapters
     *
     * Specify the adapters that will be used to try and authenticate the user
     *
     * Default value: array containing 'ZfcUser\Authentication\Adapter\Db'
     * Accepted values: array containing services that implement 'ZfcUser\Authentication\Adapter\ChainableAdapter'
     */
    //'auth_adapters' => array( -1000 => 'GoalioPasswordManagement\Authentication\Adapter\LoginAttempt' ),

    /**
     * End of ZfcUser configuration
     */
);

/**
 * You do not need to edit below this line
 */
return array(
    'goaliopasswordmanagement' => $settings,
    'zfcuser' => $zfcSettings,
);
